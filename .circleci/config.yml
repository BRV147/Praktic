version: 2

references:

base_image: &base_image
  hashicorp/terraform:light

working_directory: &working_directory
  ~/test

default_config: &default_config
  docker:
    - image: *base_image
  working_directory: *working_directory
  
repo_cache_key: &repo_cache_key
  v1-repo-{{ .Branch }}-{{ .Revision }}

# Step to restore repository from cache
restore_repo: &restore_repo
  restore_cache:
    key: *repo_cache_key

save_repo: &save_repo
  save_cache:
    key: *repo_cache_key
    paths:
      - *working_directory

terraform_init: &terraform_init
  run:
    name: terraform init
    command: |
      cd ~/test
      terraform init
      echo $CRED >> account.json
apply_job: &apply_job
  <<: *default_config
  steps:
    - *restore_repo
    - *terraform_init
    - attach_workspace:
        at: *working_directory    
    - run:
        name: terraform apply
        command: |

          cd ~/test
          sed -i "s/--agent=/--agent=$DATADOG_API_KEY/g" scripts/startup.sh
          terraform apply --auto-approve 
jobs:

  build:
    <<: *default_config
    steps:
      - checkout
      - *save_repo

  plan:
    <<: *default_config
    steps:
      - *restore_repo
      - *terraform_init
      - run:
          name: terraform plan
          command: |
            cd ~/test
            terraform plan 
 #     - persist_to_workspace:
 #         root: *working_directory
 #         paths:
 #           - terraform.plan

  apply:
    <<: *apply_job
  destroy-with-approval:
    <<: *default_config
    steps:
      - *restore_repo
      - *terraform_init
      - run:
          name: terraform destroy
          command: |
            cd ~/test
            terraform destroy --auto-approve 

workflows:
  version: 2
  build_plan_approve_apply:
    jobs:
      - build
      - plan:
          requires:
            - build
      - approve:
          type: approval
          requires:
            - plan
          filters:
            branches:
              only: master
      - destroy-with-approval:
          requires:
            - approve
          filters:
            branches:
              only: master
      - apply:
          requires:
            - plan
          filters:
            branches:
              only: master